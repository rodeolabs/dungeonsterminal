{
  "name": "ai-dungeon-master",
  "version": "1.0.0",
  "description": "AI Dungeon Master for tabletop RPGs with MCP integration",
  "main": "src/index.ts",
  "type": "module",
  "scripts": {
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:backend": "tsx watch src/index.ts",
    "dev:frontend": "cd frontend && npm run dev",
    "grok": "tsx src/grok/cli.ts",
    "grok:dev": "tsx watch src/grok/cli.ts",
    "build": "npm run build:backend && npm run build:frontend",
    "build:backend": "tsc && tsc-alias",
    "build:frontend": "cd frontend && npm run build",
    "start": "node dist/index.js",
    "install:all": "npm install && cd frontend && npm install",
    "test": "jest",
    "test:unit": "jest --testPathPattern=unit",
    "test:integration": "jest --testPathPattern=integration",
    "test:e2e": "playwright test",
    "test:performance": "jest --testPathPattern=performance",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "lint": "eslint src --ext .ts,.tsx --fix",
    "lint:check": "eslint src --ext .ts,.tsx",
    "format": "prettier --write \"src/**/*.{ts,tsx,json,md}\"",
    "format:check": "prettier --check \"src/**/*.{ts,tsx,json,md}\"",
    "typecheck": "tsc --noEmit",
    "pre-commit": "npm run lint && npm run typecheck && npm run test:unit",
    "db:generate": "npx supabase gen types typescript --project-id $SUPABASE_PROJECT_ID > src/types/database.ts",
    "db:push": "npx supabase db push",
    "db:reset": "npx supabase db reset",
    "db:migrate": "npx supabase migration new",
    "mcp:install": "npm install -g @modelcontextprotocol/cli @modelcontextprotocol/server-github @supabase/mcp-server-supabase firecrawl-mcp @playwright/mcp mcp-server-fetch",
    "mcp:setup": "mkdir -p ~/.mcp && cp mcp-config.json ~/.mcp/config.json",
    "docs:generate": "typedoc src --out docs/api",
    "docs:serve": "http-server docs -p 8080",
    "clean": "rm -rf dist coverage .nyc_output",
    "prepare": "husky install"
  },
  "keywords": [
    "ai",
    "dungeon-master",
    "dnd",
    "tabletop",
    "rpg",
    "mcp",
    "model-context-protocol",
    "typescript",
    "supabase",
    "real-time"
  ],
  "author": "AI Dungeon Master Team",
  "license": "MIT",
  "dependencies": {
    "@supabase/supabase-js": "^2.39.0",
    "@modelcontextprotocol/sdk": "^0.4.0",
    "express": "^4.18.2",
    "cors": "^2.8.5",
    "helmet": "^7.1.0",
    "morgan": "^1.10.0",
    "winston": "^3.11.0",
    "zod": "^3.22.4",
    "dotenv": "^16.3.1",
    "uuid": "^9.0.1",
    "lodash": "^4.17.21",
    "date-fns": "^2.30.0",
    "jsonwebtoken": "^9.0.2",
    "bcryptjs": "^2.4.3",
    "rate-limiter-flexible": "^4.0.1",
    "ioredis": "^5.3.2",
    "ws": "^8.14.2",
    "socket.io": "^4.7.4"
  },
  "devDependencies": {
    "@types/node": "^20.10.0",
    "@types/express": "^4.17.21",
    "@types/cors": "^2.8.17",
    "@types/morgan": "^1.9.9",
    "@types/uuid": "^9.0.7",
    "@types/lodash": "^4.14.202",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/bcryptjs": "^2.4.6",
    "@types/ws": "^8.5.10",
    "@types/jest": "^29.5.8",
    "@typescript-eslint/eslint-plugin": "^6.13.1",
    "@typescript-eslint/parser": "^6.13.1",
    "eslint": "^8.54.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.1",
    "prettier": "^3.1.0",
    "typescript": "^5.3.2",
    "tsx": "^4.6.0",
    "tsc-alias": "^1.8.8",
    "jest": "^29.7.0",
    "ts-jest": "^29.1.1",
    "@playwright/test": "^1.40.0",
    "supertest": "^6.3.3",
    "@types/supertest": "^2.0.16",
    "husky": "^8.0.3",
    "lint-staged": "^15.1.0",
    "typedoc": "^0.25.4",
    "http-server": "^14.1.1",
    "nodemon": "^3.0.2",
    "concurrently": "^8.2.2"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/rodeolabs/dungeonsterminal.git"
  },
  "bugs": {
    "url": "https://github.com/rodeolabs/dungeonsterminal/issues"
  },
  "homepage": "https://github.com/rodeolabs/dungeonsterminal#readme",
  "lint-staged": {
    "*.{ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "roots": ["<rootDir>/src"],
    "testMatch": [
      "**/__tests__/**/*.test.ts",
      "**/?(*.)+(spec|test).ts"
    ],
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!src/**/*.d.ts",
      "!src/types/**/*"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    }
  }
}